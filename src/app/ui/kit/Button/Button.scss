@import "~assets/scss/bundle.scss";

.button {
	--button-color: #{$color-red};
	--button-outline-width: 0;

	display: flex;
	align-items: center;
	justify-content: center;

	padding: 1em 3em;
	background: var(--button-color);

	box-shadow: inset 0 0 0 var(--button-outline-width) var(--button-color);
	border-radius: 1.5em;

	transition: 200ms ease color, 200ms ease background-color, 200ms ease opacity, 200ms ease box-shadow;

	// Default

	&:active {
		opacity: 0.7;
	}

	&:disabled {
		cursor: not-allowed;
	}

	&:hover:not(&--outline) {
		--button-color: #{rgba($color-red, 0.8)};
	}

	// Rest

	&--outline {
		--button-outline-width: 2px;
		--button-color: #{rgba($color-gray, 0.1)};

		background: unset;

		&:hover {
			--button-outline-width: 4px;
		}
	}

	&--outline:not(&--white, &--green, &--violet, &--dark) {
		&:hover {
			--button-color:#{rgba(white, 0.85)};
		}
	}

	/* Colors */

	&--green {
		--button-color: #{$color-green};

	}

	&--green:not(&--outline) {
		&:hover {
			--button-color: #{rgba($color-green, 0.85)};
		}

		.button__text {
			--button-text-color: #{$color-black-main};
			font-weight: 600;
		}
	}

	&--white:not(&--outline) {
		--button-color: #{$color-white};
		--button-text-color: #{$color-black-main};

		.button__text {
			font-weight: 600;
		}

		&:hover {
			--button-color: #{rgba($color-dark, 0.1)};
		}
	}

	// If is `&--white` and `&--outline`
	&--white#{&}--outline {

		box-shadow: inset 0 0 0 2px #EEF2F7;

		&:hover {
			--button-color:#{ rgba(white, 0.1)};

			background: var(--button-color);
			box-shadow: inset 0 0 0 2px $color-gray;
		}
	}

	&--dark {
		--button-color: #{$color-black-main};
		--button-text-color: #{$color-black-main};
	}

	&--dark:not(&--outline) {
		&:hover {
			--button-color: #{rgba($color-black-main, 0.85)};
		}
	}

	&--gray:not(&--outline) {
		--button-color: #{$color-blue-10};
		--button-text-color: #{$color-black-main};

		&:hover {
			--button-color: #{$color-gray};
			--button-text-color: #{$color-black-main};
		}
	}

	/* Features */

	&--little {
		border-radius: 1em;
	}

	&--small {
		padding: 1em 1.25em;
		border-radius: 1.25em;

		.button__text {
			font-size: 1rem;
		}
	}

	&--big {
		padding: 1.25em 2em;
		border-radius: 1.5em;

		.button__text {
			font-size: 1.125rem;
		}
	}

	&:not(&--pending) {
		.button__loader {
			opacity: 0;
			pointer-events: none;
		}
	}

	&--icon-only {
		--icon-size: 1.5rem;

		padding: unset;
	}

	&:not(&--icon-only) {
		.button__icon {
			padding: unset;
		}
	}

	&>*:not(:first-child) {
		margin-left: 0.75em;
	}
}

a.button {
	display: inline-flex;
	text-decoration: none;
}

.button__text {
	color: var(--button-text-color, white);
	font-size: 1.125rem;
}


.button__icon {
	--icon-size: 1.125rem;

	display: grid;
	padding: 1.5em;
	color: var(--button-icon-color, var(--button-text-color, white));

	.icon {
		transition: 200ms ease transform;
	}

	&--little {
		--icon-size: 1em;

		padding: 0.75em;
	}

	&--small {
		--icon-size: 1.25rem;
		padding: 1em;
	}

	&--big {
		--icon-size: 1.75rem;
		padding: 2em;
	}
}

.button__loader {
	position: absolute;
	inset: 0;

	transition: 200ms ease opacity;

	display: grid;
	background: rgba($color-dark, 0.5);
	border-radius: inherit;
}
